#!/bin/bash
#
##########################################################################
#
# GPL
# (c) 2015 SUSE Linux GmbH, Nuremberg, Germany
#
prim="lv9042"
secn="lv9041"
sid="lnx"
SID="LNX"
ino="42"
primSite="ROT"
secnSite="WALLDORF"
primList="lv9049,lv9051,lv9084:role=standby,lv9086:role=standby"
secnList="lv9048,lv9050,lv9083:role=standby,lv9085:role=standby"
TAG="fh_reset_ScaleOut"
HANA_INST_DIR="/hana/shared/SPS09_rev95/SAP_HANA_DATABASE"
#
##########################################################################
#

#
# unmanage
function unmanage()
{
    local res=$1
    logger -s -i -t $TAG "unmanage $res"
    crm resource unmanage $res
}


#
# manage
function manage()
{
    local res=$1
    logger -s -i -t $TAG "manage $res"
    crm resource manage $res
}

#
# cleanup
function manage()
{
    local res=$1
    logger -s -i -t $TAG "cleanup $res"
    crm resource cleanup $res
}


#
# Stop secondary system
#
function stop_secondary()
{
    logger -s -i -t $TAG "stop_secondary"
    COMMAND="hostname; sapcontrol -nr $ino -function StopSystem; sapcontrol -nr $ino -function WaitforStopped 300 10; hostname"
    ssh root@$secn "su - ${sid}adm -c '$COMMAND'"
}

#
# Stop primary system
#
function stop_primary()
{
    logger -s -i -t $TAG "stop_primary"
    COMMAND="hostname; sapcontrol -nr $ino -function StopSystem; sapcontrol -nr $ino -function WaitforStopped 300 10; hostname"
    ssh root@$prim "su - ${sid}adm -c '$COMMAND'"
}

###
# Uninstall primary
function uninstall_primary()
{ 
    logger -s -i -t $TAG "uninstall_primary"
    COMMAND="$HANA_INST_DIR/hdbuninst --sid=LNX"
    ssh root@$prim "$COMMAND"
}

###
# Uninstall secondary
function uninstall_secondary()
{
    logger -s -i -t $TAG "uninstall_secondary"
    COMMAND="$HANA_INST_DIR/hdbuninst --sid=LNX"
    ssh root@$secn "$COMMAND"
}

###
# Install primary
function install_primary()
{
    logger -s -i -t $TAG "install_primary"
    COMMAND="cat fhSAPHanaPasswords | $HANA_INST_DIR/hdbinst --addhosts=\"$primList\" --sid=${SID} --number=${ino} --batch --read_password_from_stdin=xml"
    ssh root@$prim "$COMMAND"
}

###
# Install secondary
function install_secondary()
{
    logger -s -i -t $TAG "install_secondary"
    COMMAND="cat fhSAPHanaPasswords | $HANA_INST_DIR/hdbinst --addhosts=\"$secnList\" --sid=${SID} --number=${ino} --batch --read_password_from_stdin=xml"
    ssh root@$secn "$COMMAND"
}

####
# BACKUP PRIMARY SYSTEM
function backup_primary()
{
    logger -s -i -t $TAG "backup_primary"
    # TODO: need to start that via ssh
    COMMAND="hostname; hdbsql -u system -p manager -i ${ino} \"backup data using file ('lala')\""
    ssh root@$prim "su - ${sid}adm -c '$COMMAND'"
}

####
# ENABLE AT PRIMARY
function enable_primary()
{ 
    logger -s -i -t $TAG "enable_primary"
    COMMAND="hostname; hdbnsutil -sr_enable --name=${primSite}"
    ssh root@$prim "su - ${sid}adm -c '$COMMAND'"
}

####
# REGISTER SECONDARY
function register_secondary()
{
    logger -s -i -t $TAG "register_secondary"
    COMMAND="hostname; hdbnsutil -sr_register --remoteHost=${prim} --remoteInstance=${ino} --mode=sync --name=${secnSite} --force_full_replica"
    ssh root@$secn "su - ${sid}adm -c '$COMMAND'"
}

####
# START SECONDARY
function start_secondary()
{ 
    logger -s -i -t $TAG "start_secondary"
    COMMAND="hostname; hostname; sapcontrol -nr $ino -function StartSystem; sapcontrol -nr $ino -function WaitforStarted 300 10; hostname"
    ssh root@$secn "su - ${sid}adm -c '$COMMAND'"
}

unmanage msl_SAPHana_${SID}_HDB${ino}
unmanage cln_SAPHanaTopology_${SID}_HDB${ino}

stop_secondary
stop_primary
uninstall_primary
uninstall_secondary

install_primary
backup_primary
enable_primary

install_secondary
stop_secondary
register_secondary
start_secondary


cleanup cln_SAPHanaTopology_LNX_HDB42
manage cln_SAPHanaTopology_LNX_HDB42
cleanup msl_SAPHana_LNX_HDB42
sleep 60
manage msl_SAPHana_LNX_HDB42

####
#
# SSH-COPY-ID f√ºr alle cluster knoten und user sidadm
